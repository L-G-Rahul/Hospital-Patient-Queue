import collections
import time

class HospitalQueue:
    """
    Manages a hospital patient queue with priority for emergencies.
    """
    def __init__(self):
        self.emergency_queue = collections.deque()
        self.regular_queue = collections.deque()
        self.average_service_time = 15  # In minutes

    def add_patient(self, name, case_type):
        """
        Adds a patient to the appropriate queue.
        """
        if case_type.lower() == 'emergency':
            self.emergency_queue.append(name)
            print(f"ATTENTION: Emergency patient '{name}' has been added to the priority queue.")
        elif case_type.lower() == 'regular':
            self.regular_queue.append(name)
            print(f"Regular patient '{name}' has been added to the queue.")
        else:
            print("Invalid case type. Please enter 'emergency' or 'regular'.")

    def get_estimated_wait_time(self):
        """
        Calculates and returns the estimated wait time for a regular patient.
        This is a simplified calculation and assumes all emergency patients must be seen first.
        """
        total_patients = len(self.emergency_queue) + len(self.regular_queue)
        estimated_time = total_patients * self.average_service_time
        return estimated_time

    def serve_next_patient(self):
        """
        Serves the next patient, prioritizing the emergency queue.
        """
        if self.emergency_queue:
            patient_name = self.emergency_queue.popleft()
            print(f"\nServing emergency patient: '{patient_name}'.")
        elif self.regular_queue:
            patient_name = self.regular_queue.popleft()
            print(f"\nServing regular patient: '{patient_name}'.")
        else:
            print("\nNo patients in the queue.")

    def display_queues(self):
        """
        Displays the current status of both queues and the estimated wait time.
        """
        print("\n--- Current Queue Status ---")
        print(f"Emergency Queue: {list(self.emergency_queue)}")
        print(f"Regular Queue: {list(self.regular_queue)}")
        
        wait_time = self.get_estimated_wait_time()
        print(f"\nTotal patients waiting: {len(self.emergency_queue) + len(self.regular_queue)}")
        print(f"Estimated wait time for next regular patient: approximately {wait_time} minutes.")
        print("-" * 28)

def main():
    """
    Main function to run the hospital queue management system.
    """
    hospital = HospitalQueue()
    
    while True:
        print("\n--- Hospital Queue Management System ---")
        print("1. Add a new patient")
        print("2. Serve the next patient")
        print("3. Display current queues and wait time")
        print("4. Exit")
        
        choice = input("Enter your choice (1-4): ")
        
        if choice == '1':
            name = input("Enter patient's name: ")
            case_type = input("Is this an 'emergency' or 'regular' case? ")
            hospital.add_patient(name, case_type)
        elif choice == '2':
            hospital.serve_next_patient()
        elif choice == '3':
            hospital.display_queues()
        elif choice == '4':
            print("Exiting the system. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 4.")

if __name__ == "__main__":
    main()
